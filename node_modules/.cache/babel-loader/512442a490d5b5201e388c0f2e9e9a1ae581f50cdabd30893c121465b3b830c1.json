{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Activity,Moon,Sun,Wifi,WifiOff}from'lucide-react';import Dashboard from'./components/Dashboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isDarkMode,setIsDarkMode]=useState(false);const[isConnected,setIsConnected]=useState(false);const[serverData,setServerData]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{// Check for saved dark mode preference\nconst savedDarkMode=localStorage.getItem('darkMode')==='true';setIsDarkMode(savedDarkMode);// Apply dark mode class\nif(savedDarkMode){document.documentElement.classList.add('dark');}},[]);const toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);localStorage.setItem('darkMode',newDarkMode.toString());if(newDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}};// Fetch real monitoring data\nconst fetchMonitoringData=async()=>{try{const response=await fetch('/api/monitoring');if(!response.ok){throw new Error('Failed to fetch monitoring data');}const data=await response.json();setServerData(data);setIsConnected(true);setError(null);}catch(err){console.error('Error fetching monitoring data:',err);setError(err instanceof Error?err.message:'Unknown error');setIsConnected(false);}finally{setIsLoading(false);}};// Initial data fetch\nuseEffect(()=>{fetchMonitoringData();},[]);// Set up polling for real-time updates\nuseEffect(()=>{const interval=setInterval(()=>{fetchMonitoringData();},5000);// Update every 5 seconds\nreturn()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-dark-900 transition-colors duration-200\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-dark-700\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center h-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Activity,{className:\"h-8 w-8 text-primary-600\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900 dark:text-white\",children:\"Server Monitor\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:`status-indicator ${isConnected?'status-online':'status-offline'}`}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:isConnected?'Connected':'Disconnected'}),isConnected?/*#__PURE__*/_jsx(Wifi,{className:\"h-4 w-4 text-green-500\"}):/*#__PURE__*/_jsx(WifiOff,{className:\"h-4 w-4 text-red-500\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleDarkMode,className:\"p-2 rounded-lg bg-gray-100 dark:bg-dark-700 hover:bg-gray-200 dark:hover:bg-dark-600 transition-colors\",\"aria-label\":\"Toggle dark mode\",children:isDarkMode?/*#__PURE__*/_jsx(Sun,{className:\"h-5 w-5\"}):/*#__PURE__*/_jsx(Moon,{className:\"h-5 w-5\"})})})]})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator status-offline\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-800 dark:text-red-200 font-medium\",children:[\"Error: \",error]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 dark:text-red-300 text-sm mt-1\",children:\"Make sure the backend server is running with: npm run server\"})]}),/*#__PURE__*/_jsx(Dashboard,{serverData:serverData,isConnected:isConnected,isLoading:isLoading})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Activity","Moon","Sun","Wifi","WifiOff","Dashboard","jsx","_jsx","jsxs","_jsxs","App","isDarkMode","setIsDarkMode","isConnected","setIsConnected","serverData","setServerData","isLoading","setIsLoading","error","setError","savedDarkMode","localStorage","getItem","document","documentElement","classList","add","toggleDarkMode","newDarkMode","setItem","toString","remove","fetchMonitoringData","response","fetch","ok","Error","data","json","err","console","message","interval","setInterval","clearInterval","className","children","onClick"],"sources":["/Users/shivam/Downloads/server-monitoring-main/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Activity, Moon, Sun, Wifi, WifiOff } from 'lucide-react';\nimport Dashboard from './components/Dashboard';\nimport { ServerData } from './types';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [serverData, setServerData] = useState<ServerData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Check for saved dark mode preference\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    setIsDarkMode(savedDarkMode);\n    \n    // Apply dark mode class\n    if (savedDarkMode) {\n      document.documentElement.classList.add('dark');\n    }\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode.toString());\n    \n    if (newDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n\n  // Fetch real monitoring data\n  const fetchMonitoringData = async () => {\n    try {\n      const response = await fetch('/api/monitoring');\n      if (!response.ok) {\n        throw new Error('Failed to fetch monitoring data');\n      }\n      const data = await response.json();\n      setServerData(data);\n      setIsConnected(true);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching monitoring data:', err);\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      setIsConnected(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchMonitoringData();\n  }, []);\n\n  // Set up polling for real-time updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchMonitoringData();\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-dark-900 transition-colors duration-200\">\n      {/* Header */}\n      <header className=\"bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-dark-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Activity className=\"h-8 w-8 text-primary-600\" />\n                <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  Server Monitor\n                </h1>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className={`status-indicator ${isConnected ? 'status-online' : 'status-offline'}`} />\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {isConnected ? 'Connected' : 'Disconnected'}\n                </span>\n                {isConnected ? <Wifi className=\"h-4 w-4 text-green-500\" /> : <WifiOff className=\"h-4 w-4 text-red-500\" />}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={toggleDarkMode}\n                className=\"p-2 rounded-lg bg-gray-100 dark:bg-dark-700 hover:bg-gray-200 dark:hover:bg-dark-600 transition-colors\"\n                aria-label=\"Toggle dark mode\"\n              >\n                {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"status-indicator status-offline\" />\n              <span className=\"text-red-800 dark:text-red-200 font-medium\">\n                Error: {error}\n              </span>\n            </div>\n            <p className=\"text-red-600 dark:text-red-300 text-sm mt-1\">\n              Make sure the backend server is running with: npm run server\n            </p>\n          </div>\n        )}\n        \n        <Dashboard \n          serverData={serverData} \n          isConnected={isConnected} \n          isLoading={isLoading}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}